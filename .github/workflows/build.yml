# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Run a shell script to get version
        id: set-env-var
        run: |
          echo "Running shell script to set the environment variable"
          # Simulando a obtenção de uma variável de ambiente
          VERSION=$(grep 'project.version' version.properties | cut -d '=' -f2)
          echo "VERSION=${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Build with Maven
        run: mvn package -Drevision={{ env.VERSION }}
      - name: Create container
        run: docker build . -t osvaldopina/siglet:{{ env.VERSION }} -t osvaldopina/siglet:latest
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push container
        run: docker push osvaldopina/siglet:{{ env.VERSION }}
